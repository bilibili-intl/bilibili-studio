// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: broadcast.proto

#include "broadcast.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace bilibili {
namespace live {
namespace gift {
namespace v1 {
constexpr SendGiftBroadcast_GiftItem::SendGiftBroadcast_GiftItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gift_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , coin_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , batch_combo_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tag_image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , receive_user_info_(nullptr)
  , gift_id_(int64_t{0})
  , num_(int64_t{0})
  , demarcation_(int64_t{0})
  , price_(int64_t{0})
  , discount_price_(int64_t{0})
  , total_coin_(int64_t{0})
  , timestamp_(int64_t{0})
  , super_batch_gift_num_(int64_t{0})
  , combo_resources_id_(int64_t{0})
  , combo_total_coin_(int64_t{0})
  , combo_stay_time_(int64_t{0})
  , effect_block_(int64_t{0})
  , is_special_batch_(int64_t{0})
  , float_sc_resource_id_(int64_t{0})
  , magnification_(0)
  , show_batch_combo_send_(false)
  , is_naming_(false)
  , is_join_receiver_(false)
  , crit_prob_(int64_t{0})
  , rcost_(int64_t{0})
  , test_(int64_t{0})
  , face_effect_type_(int64_t{0})
  , face_effect_id_(int64_t{0}){}
struct SendGiftBroadcast_GiftItemDefaultTypeInternal {
  constexpr SendGiftBroadcast_GiftItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendGiftBroadcast_GiftItemDefaultTypeInternal() {}
  union {
    SendGiftBroadcast_GiftItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendGiftBroadcast_GiftItemDefaultTypeInternal _SendGiftBroadcast_GiftItem_default_instance_;
constexpr SendGiftBroadcast_ReceiveUserInfo::SendGiftBroadcast_ReceiveUserInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uid_(int64_t{0}){}
struct SendGiftBroadcast_ReceiveUserInfoDefaultTypeInternal {
  constexpr SendGiftBroadcast_ReceiveUserInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendGiftBroadcast_ReceiveUserInfoDefaultTypeInternal() {}
  union {
    SendGiftBroadcast_ReceiveUserInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendGiftBroadcast_ReceiveUserInfoDefaultTypeInternal _SendGiftBroadcast_ReceiveUserInfo_default_instance_;
constexpr SendGiftBroadcast_SendMaster::SendGiftBroadcast_SendMaster(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uid_(int64_t{0}){}
struct SendGiftBroadcast_SendMasterDefaultTypeInternal {
  constexpr SendGiftBroadcast_SendMasterDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendGiftBroadcast_SendMasterDefaultTypeInternal() {}
  union {
    SendGiftBroadcast_SendMaster _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendGiftBroadcast_SendMasterDefaultTypeInternal _SendGiftBroadcast_SendMaster_default_instance_;
constexpr SendGiftBroadcast_BlindGift::SendGiftBroadcast_BlindGift(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : original_gift_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , gift_action_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , blind_gift_config_id_(int64_t{0})
  , original_gift_id_(int64_t{0})
  , from_(int64_t{0}){}
struct SendGiftBroadcast_BlindGiftDefaultTypeInternal {
  constexpr SendGiftBroadcast_BlindGiftDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendGiftBroadcast_BlindGiftDefaultTypeInternal() {}
  union {
    SendGiftBroadcast_BlindGift _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendGiftBroadcast_BlindGiftDefaultTypeInternal _SendGiftBroadcast_BlindGift_default_instance_;
constexpr SendGiftBroadcast_MedalInfo::SendGiftBroadcast_MedalInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : special_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , anchor_uname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , medal_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , target_id_(int64_t{0})
  , anchor_roomid_(int64_t{0})
  , medal_level_(int64_t{0})
  , medal_color_(int64_t{0})
  , medal_color_start_(int64_t{0})
  , medal_color_end_(int64_t{0})
  , medal_color_border_(int64_t{0})
  , is_lighted_(int64_t{0})
  , guard_level_(int64_t{0}){}
struct SendGiftBroadcast_MedalInfoDefaultTypeInternal {
  constexpr SendGiftBroadcast_MedalInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendGiftBroadcast_MedalInfoDefaultTypeInternal() {}
  union {
    SendGiftBroadcast_MedalInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendGiftBroadcast_MedalInfoDefaultTypeInternal _SendGiftBroadcast_MedalInfo_default_instance_;
constexpr SendGiftBroadcast::SendGiftBroadcast(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gift_list_()
  , uname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , face_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_color_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , send_master_(nullptr)
  , medal_info_(nullptr)
  , blind_gift_(nullptr)
  , uid_(int64_t{0})
  , guard_level_(int64_t{0})
  , svga_block_(int64_t{0})
  , switch__(false){}
struct SendGiftBroadcastDefaultTypeInternal {
  constexpr SendGiftBroadcastDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SendGiftBroadcastDefaultTypeInternal() {}
  union {
    SendGiftBroadcast _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SendGiftBroadcastDefaultTypeInternal _SendGiftBroadcast_default_instance_;
}  // namespace v1
}  // namespace gift
}  // namespace live
}  // namespace bilibili
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_broadcast_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_broadcast_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_broadcast_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_broadcast_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, gift_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, gift_name_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, num_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, demarcation_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, price_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, discount_price_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, total_coin_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, coin_type_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, tid_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, timestamp_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, super_batch_gift_num_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, batch_combo_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, combo_resources_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, combo_total_coin_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, combo_stay_time_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, magnification_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, show_batch_combo_send_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, action_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, effect_block_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, is_special_batch_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, float_sc_resource_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, tag_image_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, crit_prob_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, rcost_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, test_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, face_effect_type_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, face_effect_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, is_naming_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, receive_user_info_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem, is_join_receiver_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo, uname_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo, uid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster, uid_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster, uname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift, blind_gift_config_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift, original_gift_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift, original_gift_name_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift, from_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift, gift_action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, target_id_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, special_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, anchor_uname_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, anchor_roomid_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, medal_level_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, medal_name_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, medal_color_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, medal_color_start_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, medal_color_end_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, medal_color_border_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, is_lighted_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo, guard_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, uid_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, uname_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, face_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, name_color_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, guard_level_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, svga_block_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, send_master_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, medal_info_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, blind_gift_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, gift_list_),
  PROTOBUF_FIELD_OFFSET(::bilibili::live::gift::v1::SendGiftBroadcast, switch__),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem)},
  { 35, -1, sizeof(::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo)},
  { 42, -1, sizeof(::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster)},
  { 49, -1, sizeof(::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift)},
  { 59, -1, sizeof(::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo)},
  { 76, -1, sizeof(::bilibili::live::gift::v1::SendGiftBroadcast)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::live::gift::v1::_SendGiftBroadcast_GiftItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::live::gift::v1::_SendGiftBroadcast_ReceiveUserInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::live::gift::v1::_SendGiftBroadcast_SendMaster_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::live::gift::v1::_SendGiftBroadcast_BlindGift_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::live::gift::v1::_SendGiftBroadcast_MedalInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::live::gift::v1::_SendGiftBroadcast_default_instance_),
};

const char descriptor_table_protodef_broadcast_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017broadcast.proto\022\025bilibili.live.gift.v1"
  "\"\357\014\n\021SendGiftBroadcast\022\013\n\003uid\030\001 \001(\003\022\r\n\005u"
  "name\030\002 \001(\t\022\014\n\004face\030\003 \001(\t\022\022\n\nname_color\030\004"
  " \001(\t\022\023\n\013guard_level\030\005 \001(\003\022\022\n\nsvga_block\030"
  "\006 \001(\003\022H\n\013send_master\030\007 \001(\01323.bilibili.li"
  "ve.gift.v1.SendGiftBroadcast.SendMaster\022"
  "F\n\nmedal_info\030\010 \001(\01322.bilibili.live.gift"
  ".v1.SendGiftBroadcast.MedalInfo\022F\n\nblind"
  "_gift\030\t \001(\01322.bilibili.live.gift.v1.Send"
  "GiftBroadcast.BlindGift\022D\n\tgift_list\030\n \003"
  "(\01321.bilibili.live.gift.v1.SendGiftBroad"
  "cast.GiftItem\022\016\n\006switch\030\013 \001(\010\032\316\005\n\010GiftIt"
  "em\022\017\n\007gift_id\030\001 \001(\003\022\021\n\tgift_name\030\002 \001(\t\022\013"
  "\n\003num\030\003 \001(\003\022\023\n\013demarcation\030\004 \001(\003\022\r\n\005pric"
  "e\030\005 \001(\003\022\026\n\016discount_price\030\006 \001(\003\022\022\n\ntotal"
  "_coin\030\007 \001(\003\022\021\n\tcoin_type\030\010 \001(\t\022\013\n\003tid\030\t "
  "\001(\t\022\021\n\ttimestamp\030\n \001(\003\022\034\n\024super_batch_gi"
  "ft_num\030\013 \001(\003\022\026\n\016batch_combo_id\030\014 \001(\t\022\032\n\022"
  "combo_resources_id\030\r \001(\003\022\030\n\020combo_total_"
  "coin\030\016 \001(\003\022\027\n\017combo_stay_time\030\017 \001(\003\022\025\n\rm"
  "agnification\030\020 \001(\002\022\035\n\025show_batch_combo_s"
  "end\030\021 \001(\010\022\016\n\006action\030\022 \001(\t\022\024\n\014effect_bloc"
  "k\030\023 \001(\003\022\030\n\020is_special_batch\030\024 \001(\003\022\034\n\024flo"
  "at_sc_resource_id\030\025 \001(\003\022\021\n\ttag_image\030\026 \001"
  "(\t\022\021\n\tcrit_prob\030\027 \001(\003\022\r\n\005rcost\030\030 \001(\003\022\014\n\004"
  "test\030\031 \001(\003\022\030\n\020face_effect_type\030\032 \001(\003\022\026\n\016"
  "face_effect_id\030\033 \001(\003\022\021\n\tis_naming\030\034 \001(\010\022"
  "S\n\021receive_user_info\030\035 \001(\01328.bilibili.li"
  "ve.gift.v1.SendGiftBroadcast.ReceiveUser"
  "Info\022\030\n\020is_join_receiver\030\036 \001(\010\032-\n\017Receiv"
  "eUserInfo\022\r\n\005uname\030\001 \001(\t\022\013\n\003uid\030\002 \001(\003\032(\n"
  "\nSendMaster\022\013\n\003uid\030\001 \001(\003\022\r\n\005uname\030\002 \001(\t\032"
  "\202\001\n\tBlindGift\022\034\n\024blind_gift_config_id\030\001 "
  "\001(\003\022\030\n\020original_gift_id\030\002 \001(\003\022\032\n\022origina"
  "l_gift_name\030\003 \001(\t\022\014\n\004from\030\004 \001(\003\022\023\n\013gift_"
  "action\030\005 \001(\t\032\223\002\n\tMedalInfo\022\021\n\ttarget_id\030"
  "\001 \001(\003\022\017\n\007special\030\002 \001(\t\022\024\n\014anchor_uname\030\003"
  " \001(\t\022\025\n\ranchor_roomid\030\004 \001(\003\022\023\n\013medal_lev"
  "el\030\005 \001(\003\022\022\n\nmedal_name\030\006 \001(\t\022\023\n\013medal_co"
  "lor\030\007 \001(\003\022\031\n\021medal_color_start\030\010 \001(\003\022\027\n\017"
  "medal_color_end\030\t \001(\003\022\032\n\022medal_color_bor"
  "der\030\n \001(\003\022\022\n\nis_lighted\030\013 \001(\003\022\023\n\013guard_l"
  "evel\030\014 \001(\003b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_broadcast_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_broadcast_2eproto = {
  false, false, 1698, descriptor_table_protodef_broadcast_2eproto, "broadcast.proto", 
  &descriptor_table_broadcast_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_broadcast_2eproto::offsets,
  file_level_metadata_broadcast_2eproto, file_level_enum_descriptors_broadcast_2eproto, file_level_service_descriptors_broadcast_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_broadcast_2eproto_getter() {
  return &descriptor_table_broadcast_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_broadcast_2eproto(&descriptor_table_broadcast_2eproto);
namespace bilibili {
namespace live {
namespace gift {
namespace v1 {

// ===================================================================

class SendGiftBroadcast_GiftItem::_Internal {
 public:
  static const ::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo& receive_user_info(const SendGiftBroadcast_GiftItem* msg);
};

const ::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo&
SendGiftBroadcast_GiftItem::_Internal::receive_user_info(const SendGiftBroadcast_GiftItem* msg) {
  return *msg->receive_user_info_;
}
SendGiftBroadcast_GiftItem::SendGiftBroadcast_GiftItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
}
SendGiftBroadcast_GiftItem::SendGiftBroadcast_GiftItem(const SendGiftBroadcast_GiftItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gift_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gift_name().empty()) {
    gift_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gift_name(), 
      GetArenaForAllocation());
  }
  coin_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_coin_type().empty()) {
    coin_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_coin_type(), 
      GetArenaForAllocation());
  }
  tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tid().empty()) {
    tid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tid(), 
      GetArenaForAllocation());
  }
  batch_combo_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_batch_combo_id().empty()) {
    batch_combo_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_batch_combo_id(), 
      GetArenaForAllocation());
  }
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArenaForAllocation());
  }
  tag_image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tag_image().empty()) {
    tag_image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tag_image(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_receive_user_info()) {
    receive_user_info_ = new ::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo(*from.receive_user_info_);
  } else {
    receive_user_info_ = nullptr;
  }
  ::memcpy(&gift_id_, &from.gift_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_effect_id_) -
    reinterpret_cast<char*>(&gift_id_)) + sizeof(face_effect_id_));
  // @@protoc_insertion_point(copy_constructor:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
}

inline void SendGiftBroadcast_GiftItem::SharedCtor() {
gift_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
coin_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
batch_combo_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tag_image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&receive_user_info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&face_effect_id_) -
    reinterpret_cast<char*>(&receive_user_info_)) + sizeof(face_effect_id_));
}

SendGiftBroadcast_GiftItem::~SendGiftBroadcast_GiftItem() {
  // @@protoc_insertion_point(destructor:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendGiftBroadcast_GiftItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  gift_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  coin_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  batch_combo_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete receive_user_info_;
}

void SendGiftBroadcast_GiftItem::ArenaDtor(void* object) {
  SendGiftBroadcast_GiftItem* _this = reinterpret_cast< SendGiftBroadcast_GiftItem* >(object);
  (void)_this;
}
void SendGiftBroadcast_GiftItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendGiftBroadcast_GiftItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendGiftBroadcast_GiftItem::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gift_name_.ClearToEmpty();
  coin_type_.ClearToEmpty();
  tid_.ClearToEmpty();
  batch_combo_id_.ClearToEmpty();
  action_.ClearToEmpty();
  tag_image_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && receive_user_info_ != nullptr) {
    delete receive_user_info_;
  }
  receive_user_info_ = nullptr;
  ::memset(&gift_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_effect_id_) -
      reinterpret_cast<char*>(&gift_id_)) + sizeof(face_effect_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGiftBroadcast_GiftItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 gift_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          gift_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gift_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_gift_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.gift_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 demarcation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          demarcation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 price = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 discount_price = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          discount_price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 total_coin = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          total_coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string coin_type = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_coin_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.coin_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tid = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_tid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.tid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 super_batch_gift_num = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          super_batch_gift_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string batch_combo_id = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_batch_combo_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.batch_combo_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 combo_resources_id = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          combo_resources_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 combo_total_coin = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          combo_total_coin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 combo_stay_time = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          combo_stay_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float magnification = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 133)) {
          magnification_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // bool show_batch_combo_send = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          show_batch_combo_send_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string action = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 effect_block = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          effect_block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 is_special_batch = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          is_special_batch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 float_sc_resource_id = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          float_sc_resource_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tag_image = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_tag_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.tag_image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 crit_prob = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          crit_prob_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 rcost = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          rcost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 test = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          test_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 face_effect_type = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          face_effect_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 face_effect_id = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          face_effect_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_naming = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          is_naming_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo receive_user_info = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          ptr = ctx->ParseMessage(_internal_mutable_receive_user_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_join_receiver = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          is_join_receiver_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendGiftBroadcast_GiftItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 gift_id = 1;
  if (this->_internal_gift_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_gift_id(), target);
  }

  // string gift_name = 2;
  if (!this->_internal_gift_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gift_name().data(), static_cast<int>(this->_internal_gift_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.gift_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_gift_name(), target);
  }

  // int64 num = 3;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_num(), target);
  }

  // int64 demarcation = 4;
  if (this->_internal_demarcation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_demarcation(), target);
  }

  // int64 price = 5;
  if (this->_internal_price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_price(), target);
  }

  // int64 discount_price = 6;
  if (this->_internal_discount_price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_discount_price(), target);
  }

  // int64 total_coin = 7;
  if (this->_internal_total_coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_total_coin(), target);
  }

  // string coin_type = 8;
  if (!this->_internal_coin_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_coin_type().data(), static_cast<int>(this->_internal_coin_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.coin_type");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_coin_type(), target);
  }

  // string tid = 9;
  if (!this->_internal_tid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tid().data(), static_cast<int>(this->_internal_tid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.tid");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_tid(), target);
  }

  // int64 timestamp = 10;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_timestamp(), target);
  }

  // int64 super_batch_gift_num = 11;
  if (this->_internal_super_batch_gift_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(11, this->_internal_super_batch_gift_num(), target);
  }

  // string batch_combo_id = 12;
  if (!this->_internal_batch_combo_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_batch_combo_id().data(), static_cast<int>(this->_internal_batch_combo_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.batch_combo_id");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_batch_combo_id(), target);
  }

  // int64 combo_resources_id = 13;
  if (this->_internal_combo_resources_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(13, this->_internal_combo_resources_id(), target);
  }

  // int64 combo_total_coin = 14;
  if (this->_internal_combo_total_coin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(14, this->_internal_combo_total_coin(), target);
  }

  // int64 combo_stay_time = 15;
  if (this->_internal_combo_stay_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(15, this->_internal_combo_stay_time(), target);
  }

  // float magnification = 16;
  if (!(this->_internal_magnification() <= 0 && this->_internal_magnification() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(16, this->_internal_magnification(), target);
  }

  // bool show_batch_combo_send = 17;
  if (this->_internal_show_batch_combo_send() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_show_batch_combo_send(), target);
  }

  // string action = 18;
  if (!this->_internal_action().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.action");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_action(), target);
  }

  // int64 effect_block = 19;
  if (this->_internal_effect_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(19, this->_internal_effect_block(), target);
  }

  // int64 is_special_batch = 20;
  if (this->_internal_is_special_batch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(20, this->_internal_is_special_batch(), target);
  }

  // int64 float_sc_resource_id = 21;
  if (this->_internal_float_sc_resource_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(21, this->_internal_float_sc_resource_id(), target);
  }

  // string tag_image = 22;
  if (!this->_internal_tag_image().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tag_image().data(), static_cast<int>(this->_internal_tag_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.GiftItem.tag_image");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_tag_image(), target);
  }

  // int64 crit_prob = 23;
  if (this->_internal_crit_prob() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(23, this->_internal_crit_prob(), target);
  }

  // int64 rcost = 24;
  if (this->_internal_rcost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(24, this->_internal_rcost(), target);
  }

  // int64 test = 25;
  if (this->_internal_test() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(25, this->_internal_test(), target);
  }

  // int64 face_effect_type = 26;
  if (this->_internal_face_effect_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(26, this->_internal_face_effect_type(), target);
  }

  // int64 face_effect_id = 27;
  if (this->_internal_face_effect_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(27, this->_internal_face_effect_id(), target);
  }

  // bool is_naming = 28;
  if (this->_internal_is_naming() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_is_naming(), target);
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo receive_user_info = 29;
  if (this->_internal_has_receive_user_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        29, _Internal::receive_user_info(this), target, stream);
  }

  // bool is_join_receiver = 30;
  if (this->_internal_is_join_receiver() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_is_join_receiver(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
  return target;
}

size_t SendGiftBroadcast_GiftItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string gift_name = 2;
  if (!this->_internal_gift_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gift_name());
  }

  // string coin_type = 8;
  if (!this->_internal_coin_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_coin_type());
  }

  // string tid = 9;
  if (!this->_internal_tid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tid());
  }

  // string batch_combo_id = 12;
  if (!this->_internal_batch_combo_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_batch_combo_id());
  }

  // string action = 18;
  if (!this->_internal_action().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  // string tag_image = 22;
  if (!this->_internal_tag_image().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tag_image());
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo receive_user_info = 29;
  if (this->_internal_has_receive_user_info()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *receive_user_info_);
  }

  // int64 gift_id = 1;
  if (this->_internal_gift_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_gift_id());
  }

  // int64 num = 3;
  if (this->_internal_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_num());
  }

  // int64 demarcation = 4;
  if (this->_internal_demarcation() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_demarcation());
  }

  // int64 price = 5;
  if (this->_internal_price() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_price());
  }

  // int64 discount_price = 6;
  if (this->_internal_discount_price() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_discount_price());
  }

  // int64 total_coin = 7;
  if (this->_internal_total_coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_total_coin());
  }

  // int64 timestamp = 10;
  if (this->_internal_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  // int64 super_batch_gift_num = 11;
  if (this->_internal_super_batch_gift_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_super_batch_gift_num());
  }

  // int64 combo_resources_id = 13;
  if (this->_internal_combo_resources_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_combo_resources_id());
  }

  // int64 combo_total_coin = 14;
  if (this->_internal_combo_total_coin() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_combo_total_coin());
  }

  // int64 combo_stay_time = 15;
  if (this->_internal_combo_stay_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_combo_stay_time());
  }

  // int64 effect_block = 19;
  if (this->_internal_effect_block() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_effect_block());
  }

  // int64 is_special_batch = 20;
  if (this->_internal_is_special_batch() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_is_special_batch());
  }

  // int64 float_sc_resource_id = 21;
  if (this->_internal_float_sc_resource_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_float_sc_resource_id());
  }

  // float magnification = 16;
  if (!(this->_internal_magnification() <= 0 && this->_internal_magnification() >= 0)) {
    total_size += 2 + 4;
  }

  // bool show_batch_combo_send = 17;
  if (this->_internal_show_batch_combo_send() != 0) {
    total_size += 2 + 1;
  }

  // bool is_naming = 28;
  if (this->_internal_is_naming() != 0) {
    total_size += 2 + 1;
  }

  // bool is_join_receiver = 30;
  if (this->_internal_is_join_receiver() != 0) {
    total_size += 2 + 1;
  }

  // int64 crit_prob = 23;
  if (this->_internal_crit_prob() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_crit_prob());
  }

  // int64 rcost = 24;
  if (this->_internal_rcost() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_rcost());
  }

  // int64 test = 25;
  if (this->_internal_test() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_test());
  }

  // int64 face_effect_type = 26;
  if (this->_internal_face_effect_type() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_face_effect_type());
  }

  // int64 face_effect_id = 27;
  if (this->_internal_face_effect_id() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_face_effect_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGiftBroadcast_GiftItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendGiftBroadcast_GiftItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGiftBroadcast_GiftItem::GetClassData() const { return &_class_data_; }

void SendGiftBroadcast_GiftItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendGiftBroadcast_GiftItem *>(to)->MergeFrom(
      static_cast<const SendGiftBroadcast_GiftItem &>(from));
}


void SendGiftBroadcast_GiftItem::MergeFrom(const SendGiftBroadcast_GiftItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_gift_name().empty()) {
    _internal_set_gift_name(from._internal_gift_name());
  }
  if (!from._internal_coin_type().empty()) {
    _internal_set_coin_type(from._internal_coin_type());
  }
  if (!from._internal_tid().empty()) {
    _internal_set_tid(from._internal_tid());
  }
  if (!from._internal_batch_combo_id().empty()) {
    _internal_set_batch_combo_id(from._internal_batch_combo_id());
  }
  if (!from._internal_action().empty()) {
    _internal_set_action(from._internal_action());
  }
  if (!from._internal_tag_image().empty()) {
    _internal_set_tag_image(from._internal_tag_image());
  }
  if (from._internal_has_receive_user_info()) {
    _internal_mutable_receive_user_info()->::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo::MergeFrom(from._internal_receive_user_info());
  }
  if (from._internal_gift_id() != 0) {
    _internal_set_gift_id(from._internal_gift_id());
  }
  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  if (from._internal_demarcation() != 0) {
    _internal_set_demarcation(from._internal_demarcation());
  }
  if (from._internal_price() != 0) {
    _internal_set_price(from._internal_price());
  }
  if (from._internal_discount_price() != 0) {
    _internal_set_discount_price(from._internal_discount_price());
  }
  if (from._internal_total_coin() != 0) {
    _internal_set_total_coin(from._internal_total_coin());
  }
  if (from._internal_timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_super_batch_gift_num() != 0) {
    _internal_set_super_batch_gift_num(from._internal_super_batch_gift_num());
  }
  if (from._internal_combo_resources_id() != 0) {
    _internal_set_combo_resources_id(from._internal_combo_resources_id());
  }
  if (from._internal_combo_total_coin() != 0) {
    _internal_set_combo_total_coin(from._internal_combo_total_coin());
  }
  if (from._internal_combo_stay_time() != 0) {
    _internal_set_combo_stay_time(from._internal_combo_stay_time());
  }
  if (from._internal_effect_block() != 0) {
    _internal_set_effect_block(from._internal_effect_block());
  }
  if (from._internal_is_special_batch() != 0) {
    _internal_set_is_special_batch(from._internal_is_special_batch());
  }
  if (from._internal_float_sc_resource_id() != 0) {
    _internal_set_float_sc_resource_id(from._internal_float_sc_resource_id());
  }
  if (!(from._internal_magnification() <= 0 && from._internal_magnification() >= 0)) {
    _internal_set_magnification(from._internal_magnification());
  }
  if (from._internal_show_batch_combo_send() != 0) {
    _internal_set_show_batch_combo_send(from._internal_show_batch_combo_send());
  }
  if (from._internal_is_naming() != 0) {
    _internal_set_is_naming(from._internal_is_naming());
  }
  if (from._internal_is_join_receiver() != 0) {
    _internal_set_is_join_receiver(from._internal_is_join_receiver());
  }
  if (from._internal_crit_prob() != 0) {
    _internal_set_crit_prob(from._internal_crit_prob());
  }
  if (from._internal_rcost() != 0) {
    _internal_set_rcost(from._internal_rcost());
  }
  if (from._internal_test() != 0) {
    _internal_set_test(from._internal_test());
  }
  if (from._internal_face_effect_type() != 0) {
    _internal_set_face_effect_type(from._internal_face_effect_type());
  }
  if (from._internal_face_effect_id() != 0) {
    _internal_set_face_effect_id(from._internal_face_effect_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGiftBroadcast_GiftItem::CopyFrom(const SendGiftBroadcast_GiftItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.live.gift.v1.SendGiftBroadcast.GiftItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftBroadcast_GiftItem::IsInitialized() const {
  return true;
}

void SendGiftBroadcast_GiftItem::InternalSwap(SendGiftBroadcast_GiftItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &gift_name_, GetArenaForAllocation(),
      &other->gift_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &coin_type_, GetArenaForAllocation(),
      &other->coin_type_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tid_, GetArenaForAllocation(),
      &other->tid_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &batch_combo_id_, GetArenaForAllocation(),
      &other->batch_combo_id_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &action_, GetArenaForAllocation(),
      &other->action_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tag_image_, GetArenaForAllocation(),
      &other->tag_image_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGiftBroadcast_GiftItem, face_effect_id_)
      + sizeof(SendGiftBroadcast_GiftItem::face_effect_id_)
      - PROTOBUF_FIELD_OFFSET(SendGiftBroadcast_GiftItem, receive_user_info_)>(
          reinterpret_cast<char*>(&receive_user_info_),
          reinterpret_cast<char*>(&other->receive_user_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGiftBroadcast_GiftItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_broadcast_2eproto_getter, &descriptor_table_broadcast_2eproto_once,
      file_level_metadata_broadcast_2eproto[0]);
}

// ===================================================================

class SendGiftBroadcast_ReceiveUserInfo::_Internal {
 public:
};

SendGiftBroadcast_ReceiveUserInfo::SendGiftBroadcast_ReceiveUserInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
}
SendGiftBroadcast_ReceiveUserInfo::SendGiftBroadcast_ReceiveUserInfo(const SendGiftBroadcast_ReceiveUserInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uname().empty()) {
    uname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uname(), 
      GetArenaForAllocation());
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
}

inline void SendGiftBroadcast_ReceiveUserInfo::SharedCtor() {
uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uid_ = int64_t{0};
}

SendGiftBroadcast_ReceiveUserInfo::~SendGiftBroadcast_ReceiveUserInfo() {
  // @@protoc_insertion_point(destructor:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendGiftBroadcast_ReceiveUserInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SendGiftBroadcast_ReceiveUserInfo::ArenaDtor(void* object) {
  SendGiftBroadcast_ReceiveUserInfo* _this = reinterpret_cast< SendGiftBroadcast_ReceiveUserInfo* >(object);
  (void)_this;
}
void SendGiftBroadcast_ReceiveUserInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendGiftBroadcast_ReceiveUserInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendGiftBroadcast_ReceiveUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uname_.ClearToEmpty();
  uid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGiftBroadcast_ReceiveUserInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo.uname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendGiftBroadcast_ReceiveUserInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uname = 1;
  if (!this->_internal_uname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uname().data(), static_cast<int>(this->_internal_uname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo.uname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uname(), target);
  }

  // int64 uid = 2;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_uid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
  return target;
}

size_t SendGiftBroadcast_ReceiveUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uname = 1;
  if (!this->_internal_uname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uname());
  }

  // int64 uid = 2;
  if (this->_internal_uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGiftBroadcast_ReceiveUserInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendGiftBroadcast_ReceiveUserInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGiftBroadcast_ReceiveUserInfo::GetClassData() const { return &_class_data_; }

void SendGiftBroadcast_ReceiveUserInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendGiftBroadcast_ReceiveUserInfo *>(to)->MergeFrom(
      static_cast<const SendGiftBroadcast_ReceiveUserInfo &>(from));
}


void SendGiftBroadcast_ReceiveUserInfo::MergeFrom(const SendGiftBroadcast_ReceiveUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uname().empty()) {
    _internal_set_uname(from._internal_uname());
  }
  if (from._internal_uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGiftBroadcast_ReceiveUserInfo::CopyFrom(const SendGiftBroadcast_ReceiveUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.live.gift.v1.SendGiftBroadcast.ReceiveUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftBroadcast_ReceiveUserInfo::IsInitialized() const {
  return true;
}

void SendGiftBroadcast_ReceiveUserInfo::InternalSwap(SendGiftBroadcast_ReceiveUserInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uname_, GetArenaForAllocation(),
      &other->uname_, other->GetArenaForAllocation()
  );
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGiftBroadcast_ReceiveUserInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_broadcast_2eproto_getter, &descriptor_table_broadcast_2eproto_once,
      file_level_metadata_broadcast_2eproto[1]);
}

// ===================================================================

class SendGiftBroadcast_SendMaster::_Internal {
 public:
};

SendGiftBroadcast_SendMaster::SendGiftBroadcast_SendMaster(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
}
SendGiftBroadcast_SendMaster::SendGiftBroadcast_SendMaster(const SendGiftBroadcast_SendMaster& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uname().empty()) {
    uname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uname(), 
      GetArenaForAllocation());
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
}

inline void SendGiftBroadcast_SendMaster::SharedCtor() {
uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uid_ = int64_t{0};
}

SendGiftBroadcast_SendMaster::~SendGiftBroadcast_SendMaster() {
  // @@protoc_insertion_point(destructor:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendGiftBroadcast_SendMaster::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SendGiftBroadcast_SendMaster::ArenaDtor(void* object) {
  SendGiftBroadcast_SendMaster* _this = reinterpret_cast< SendGiftBroadcast_SendMaster* >(object);
  (void)_this;
}
void SendGiftBroadcast_SendMaster::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendGiftBroadcast_SendMaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendGiftBroadcast_SendMaster::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uname_.ClearToEmpty();
  uid_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGiftBroadcast_SendMaster::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.SendMaster.uname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendGiftBroadcast_SendMaster::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_uid(), target);
  }

  // string uname = 2;
  if (!this->_internal_uname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uname().data(), static_cast<int>(this->_internal_uname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.SendMaster.uname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
  return target;
}

size_t SendGiftBroadcast_SendMaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uname = 2;
  if (!this->_internal_uname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uname());
  }

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_uid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGiftBroadcast_SendMaster::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendGiftBroadcast_SendMaster::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGiftBroadcast_SendMaster::GetClassData() const { return &_class_data_; }

void SendGiftBroadcast_SendMaster::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendGiftBroadcast_SendMaster *>(to)->MergeFrom(
      static_cast<const SendGiftBroadcast_SendMaster &>(from));
}


void SendGiftBroadcast_SendMaster::MergeFrom(const SendGiftBroadcast_SendMaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uname().empty()) {
    _internal_set_uname(from._internal_uname());
  }
  if (from._internal_uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGiftBroadcast_SendMaster::CopyFrom(const SendGiftBroadcast_SendMaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.live.gift.v1.SendGiftBroadcast.SendMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftBroadcast_SendMaster::IsInitialized() const {
  return true;
}

void SendGiftBroadcast_SendMaster::InternalSwap(SendGiftBroadcast_SendMaster* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uname_, GetArenaForAllocation(),
      &other->uname_, other->GetArenaForAllocation()
  );
  swap(uid_, other->uid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGiftBroadcast_SendMaster::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_broadcast_2eproto_getter, &descriptor_table_broadcast_2eproto_once,
      file_level_metadata_broadcast_2eproto[2]);
}

// ===================================================================

class SendGiftBroadcast_BlindGift::_Internal {
 public:
};

SendGiftBroadcast_BlindGift::SendGiftBroadcast_BlindGift(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
}
SendGiftBroadcast_BlindGift::SendGiftBroadcast_BlindGift(const SendGiftBroadcast_BlindGift& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  original_gift_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_original_gift_name().empty()) {
    original_gift_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_original_gift_name(), 
      GetArenaForAllocation());
  }
  gift_action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gift_action().empty()) {
    gift_action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gift_action(), 
      GetArenaForAllocation());
  }
  ::memcpy(&blind_gift_config_id_, &from.blind_gift_config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_) -
    reinterpret_cast<char*>(&blind_gift_config_id_)) + sizeof(from_));
  // @@protoc_insertion_point(copy_constructor:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
}

inline void SendGiftBroadcast_BlindGift::SharedCtor() {
original_gift_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
gift_action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&blind_gift_config_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&from_) -
    reinterpret_cast<char*>(&blind_gift_config_id_)) + sizeof(from_));
}

SendGiftBroadcast_BlindGift::~SendGiftBroadcast_BlindGift() {
  // @@protoc_insertion_point(destructor:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendGiftBroadcast_BlindGift::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  original_gift_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gift_action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SendGiftBroadcast_BlindGift::ArenaDtor(void* object) {
  SendGiftBroadcast_BlindGift* _this = reinterpret_cast< SendGiftBroadcast_BlindGift* >(object);
  (void)_this;
}
void SendGiftBroadcast_BlindGift::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendGiftBroadcast_BlindGift::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendGiftBroadcast_BlindGift::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  original_gift_name_.ClearToEmpty();
  gift_action_.ClearToEmpty();
  ::memset(&blind_gift_config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_) -
      reinterpret_cast<char*>(&blind_gift_config_id_)) + sizeof(from_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGiftBroadcast_BlindGift::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 blind_gift_config_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          blind_gift_config_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 original_gift_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          original_gift_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string original_gift_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_original_gift_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.BlindGift.original_gift_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 from = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          from_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gift_action = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_gift_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.BlindGift.gift_action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendGiftBroadcast_BlindGift::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 blind_gift_config_id = 1;
  if (this->_internal_blind_gift_config_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_blind_gift_config_id(), target);
  }

  // int64 original_gift_id = 2;
  if (this->_internal_original_gift_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_original_gift_id(), target);
  }

  // string original_gift_name = 3;
  if (!this->_internal_original_gift_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_original_gift_name().data(), static_cast<int>(this->_internal_original_gift_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.BlindGift.original_gift_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_original_gift_name(), target);
  }

  // int64 from = 4;
  if (this->_internal_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_from(), target);
  }

  // string gift_action = 5;
  if (!this->_internal_gift_action().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gift_action().data(), static_cast<int>(this->_internal_gift_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.BlindGift.gift_action");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_gift_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
  return target;
}

size_t SendGiftBroadcast_BlindGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string original_gift_name = 3;
  if (!this->_internal_original_gift_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_original_gift_name());
  }

  // string gift_action = 5;
  if (!this->_internal_gift_action().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gift_action());
  }

  // int64 blind_gift_config_id = 1;
  if (this->_internal_blind_gift_config_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_blind_gift_config_id());
  }

  // int64 original_gift_id = 2;
  if (this->_internal_original_gift_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_original_gift_id());
  }

  // int64 from = 4;
  if (this->_internal_from() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_from());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGiftBroadcast_BlindGift::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendGiftBroadcast_BlindGift::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGiftBroadcast_BlindGift::GetClassData() const { return &_class_data_; }

void SendGiftBroadcast_BlindGift::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendGiftBroadcast_BlindGift *>(to)->MergeFrom(
      static_cast<const SendGiftBroadcast_BlindGift &>(from));
}


void SendGiftBroadcast_BlindGift::MergeFrom(const SendGiftBroadcast_BlindGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_original_gift_name().empty()) {
    _internal_set_original_gift_name(from._internal_original_gift_name());
  }
  if (!from._internal_gift_action().empty()) {
    _internal_set_gift_action(from._internal_gift_action());
  }
  if (from._internal_blind_gift_config_id() != 0) {
    _internal_set_blind_gift_config_id(from._internal_blind_gift_config_id());
  }
  if (from._internal_original_gift_id() != 0) {
    _internal_set_original_gift_id(from._internal_original_gift_id());
  }
  if (from._internal_from() != 0) {
    _internal_set_from(from._internal_from());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGiftBroadcast_BlindGift::CopyFrom(const SendGiftBroadcast_BlindGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.live.gift.v1.SendGiftBroadcast.BlindGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftBroadcast_BlindGift::IsInitialized() const {
  return true;
}

void SendGiftBroadcast_BlindGift::InternalSwap(SendGiftBroadcast_BlindGift* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &original_gift_name_, GetArenaForAllocation(),
      &other->original_gift_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &gift_action_, GetArenaForAllocation(),
      &other->gift_action_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGiftBroadcast_BlindGift, from_)
      + sizeof(SendGiftBroadcast_BlindGift::from_)
      - PROTOBUF_FIELD_OFFSET(SendGiftBroadcast_BlindGift, blind_gift_config_id_)>(
          reinterpret_cast<char*>(&blind_gift_config_id_),
          reinterpret_cast<char*>(&other->blind_gift_config_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGiftBroadcast_BlindGift::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_broadcast_2eproto_getter, &descriptor_table_broadcast_2eproto_once,
      file_level_metadata_broadcast_2eproto[3]);
}

// ===================================================================

class SendGiftBroadcast_MedalInfo::_Internal {
 public:
};

SendGiftBroadcast_MedalInfo::SendGiftBroadcast_MedalInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
}
SendGiftBroadcast_MedalInfo::SendGiftBroadcast_MedalInfo(const SendGiftBroadcast_MedalInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  special_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_special().empty()) {
    special_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_special(), 
      GetArenaForAllocation());
  }
  anchor_uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_anchor_uname().empty()) {
    anchor_uname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_anchor_uname(), 
      GetArenaForAllocation());
  }
  medal_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_medal_name().empty()) {
    medal_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_medal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&target_id_, &from.target_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guard_level_) -
    reinterpret_cast<char*>(&target_id_)) + sizeof(guard_level_));
  // @@protoc_insertion_point(copy_constructor:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
}

inline void SendGiftBroadcast_MedalInfo::SharedCtor() {
special_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
anchor_uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
medal_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&target_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guard_level_) -
    reinterpret_cast<char*>(&target_id_)) + sizeof(guard_level_));
}

SendGiftBroadcast_MedalInfo::~SendGiftBroadcast_MedalInfo() {
  // @@protoc_insertion_point(destructor:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendGiftBroadcast_MedalInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  special_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  anchor_uname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  medal_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SendGiftBroadcast_MedalInfo::ArenaDtor(void* object) {
  SendGiftBroadcast_MedalInfo* _this = reinterpret_cast< SendGiftBroadcast_MedalInfo* >(object);
  (void)_this;
}
void SendGiftBroadcast_MedalInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendGiftBroadcast_MedalInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendGiftBroadcast_MedalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  special_.ClearToEmpty();
  anchor_uname_.ClearToEmpty();
  medal_name_.ClearToEmpty();
  ::memset(&target_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&guard_level_) -
      reinterpret_cast<char*>(&target_id_)) + sizeof(guard_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGiftBroadcast_MedalInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 target_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          target_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string special = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_special();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo.special"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string anchor_uname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_anchor_uname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo.anchor_uname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 anchor_roomid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          anchor_roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 medal_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          medal_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string medal_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_medal_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo.medal_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 medal_color = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          medal_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 medal_color_start = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          medal_color_start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 medal_color_end = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          medal_color_end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 medal_color_border = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          medal_color_border_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 is_lighted = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          is_lighted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 guard_level = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          guard_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendGiftBroadcast_MedalInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 target_id = 1;
  if (this->_internal_target_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_target_id(), target);
  }

  // string special = 2;
  if (!this->_internal_special().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_special().data(), static_cast<int>(this->_internal_special().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo.special");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_special(), target);
  }

  // string anchor_uname = 3;
  if (!this->_internal_anchor_uname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anchor_uname().data(), static_cast<int>(this->_internal_anchor_uname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo.anchor_uname");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_anchor_uname(), target);
  }

  // int64 anchor_roomid = 4;
  if (this->_internal_anchor_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_anchor_roomid(), target);
  }

  // int64 medal_level = 5;
  if (this->_internal_medal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_medal_level(), target);
  }

  // string medal_name = 6;
  if (!this->_internal_medal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_medal_name().data(), static_cast<int>(this->_internal_medal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo.medal_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_medal_name(), target);
  }

  // int64 medal_color = 7;
  if (this->_internal_medal_color() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_medal_color(), target);
  }

  // int64 medal_color_start = 8;
  if (this->_internal_medal_color_start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_medal_color_start(), target);
  }

  // int64 medal_color_end = 9;
  if (this->_internal_medal_color_end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(9, this->_internal_medal_color_end(), target);
  }

  // int64 medal_color_border = 10;
  if (this->_internal_medal_color_border() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_medal_color_border(), target);
  }

  // int64 is_lighted = 11;
  if (this->_internal_is_lighted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(11, this->_internal_is_lighted(), target);
  }

  // int64 guard_level = 12;
  if (this->_internal_guard_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->_internal_guard_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
  return target;
}

size_t SendGiftBroadcast_MedalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string special = 2;
  if (!this->_internal_special().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_special());
  }

  // string anchor_uname = 3;
  if (!this->_internal_anchor_uname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anchor_uname());
  }

  // string medal_name = 6;
  if (!this->_internal_medal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_medal_name());
  }

  // int64 target_id = 1;
  if (this->_internal_target_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_target_id());
  }

  // int64 anchor_roomid = 4;
  if (this->_internal_anchor_roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_anchor_roomid());
  }

  // int64 medal_level = 5;
  if (this->_internal_medal_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal_level());
  }

  // int64 medal_color = 7;
  if (this->_internal_medal_color() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal_color());
  }

  // int64 medal_color_start = 8;
  if (this->_internal_medal_color_start() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal_color_start());
  }

  // int64 medal_color_end = 9;
  if (this->_internal_medal_color_end() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal_color_end());
  }

  // int64 medal_color_border = 10;
  if (this->_internal_medal_color_border() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_medal_color_border());
  }

  // int64 is_lighted = 11;
  if (this->_internal_is_lighted() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_is_lighted());
  }

  // int64 guard_level = 12;
  if (this->_internal_guard_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_guard_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGiftBroadcast_MedalInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendGiftBroadcast_MedalInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGiftBroadcast_MedalInfo::GetClassData() const { return &_class_data_; }

void SendGiftBroadcast_MedalInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendGiftBroadcast_MedalInfo *>(to)->MergeFrom(
      static_cast<const SendGiftBroadcast_MedalInfo &>(from));
}


void SendGiftBroadcast_MedalInfo::MergeFrom(const SendGiftBroadcast_MedalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_special().empty()) {
    _internal_set_special(from._internal_special());
  }
  if (!from._internal_anchor_uname().empty()) {
    _internal_set_anchor_uname(from._internal_anchor_uname());
  }
  if (!from._internal_medal_name().empty()) {
    _internal_set_medal_name(from._internal_medal_name());
  }
  if (from._internal_target_id() != 0) {
    _internal_set_target_id(from._internal_target_id());
  }
  if (from._internal_anchor_roomid() != 0) {
    _internal_set_anchor_roomid(from._internal_anchor_roomid());
  }
  if (from._internal_medal_level() != 0) {
    _internal_set_medal_level(from._internal_medal_level());
  }
  if (from._internal_medal_color() != 0) {
    _internal_set_medal_color(from._internal_medal_color());
  }
  if (from._internal_medal_color_start() != 0) {
    _internal_set_medal_color_start(from._internal_medal_color_start());
  }
  if (from._internal_medal_color_end() != 0) {
    _internal_set_medal_color_end(from._internal_medal_color_end());
  }
  if (from._internal_medal_color_border() != 0) {
    _internal_set_medal_color_border(from._internal_medal_color_border());
  }
  if (from._internal_is_lighted() != 0) {
    _internal_set_is_lighted(from._internal_is_lighted());
  }
  if (from._internal_guard_level() != 0) {
    _internal_set_guard_level(from._internal_guard_level());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGiftBroadcast_MedalInfo::CopyFrom(const SendGiftBroadcast_MedalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftBroadcast_MedalInfo::IsInitialized() const {
  return true;
}

void SendGiftBroadcast_MedalInfo::InternalSwap(SendGiftBroadcast_MedalInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &special_, GetArenaForAllocation(),
      &other->special_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &anchor_uname_, GetArenaForAllocation(),
      &other->anchor_uname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &medal_name_, GetArenaForAllocation(),
      &other->medal_name_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGiftBroadcast_MedalInfo, guard_level_)
      + sizeof(SendGiftBroadcast_MedalInfo::guard_level_)
      - PROTOBUF_FIELD_OFFSET(SendGiftBroadcast_MedalInfo, target_id_)>(
          reinterpret_cast<char*>(&target_id_),
          reinterpret_cast<char*>(&other->target_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGiftBroadcast_MedalInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_broadcast_2eproto_getter, &descriptor_table_broadcast_2eproto_once,
      file_level_metadata_broadcast_2eproto[4]);
}

// ===================================================================

class SendGiftBroadcast::_Internal {
 public:
  static const ::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster& send_master(const SendGiftBroadcast* msg);
  static const ::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo& medal_info(const SendGiftBroadcast* msg);
  static const ::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift& blind_gift(const SendGiftBroadcast* msg);
};

const ::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster&
SendGiftBroadcast::_Internal::send_master(const SendGiftBroadcast* msg) {
  return *msg->send_master_;
}
const ::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo&
SendGiftBroadcast::_Internal::medal_info(const SendGiftBroadcast* msg) {
  return *msg->medal_info_;
}
const ::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift&
SendGiftBroadcast::_Internal::blind_gift(const SendGiftBroadcast* msg) {
  return *msg->blind_gift_;
}
SendGiftBroadcast::SendGiftBroadcast(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  gift_list_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.live.gift.v1.SendGiftBroadcast)
}
SendGiftBroadcast::SendGiftBroadcast(const SendGiftBroadcast& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      gift_list_(from.gift_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uname().empty()) {
    uname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uname(), 
      GetArenaForAllocation());
  }
  face_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_face().empty()) {
    face_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_face(), 
      GetArenaForAllocation());
  }
  name_color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name_color().empty()) {
    name_color_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name_color(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_send_master()) {
    send_master_ = new ::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster(*from.send_master_);
  } else {
    send_master_ = nullptr;
  }
  if (from._internal_has_medal_info()) {
    medal_info_ = new ::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo(*from.medal_info_);
  } else {
    medal_info_ = nullptr;
  }
  if (from._internal_has_blind_gift()) {
    blind_gift_ = new ::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift(*from.blind_gift_);
  } else {
    blind_gift_ = nullptr;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&switch__) -
    reinterpret_cast<char*>(&uid_)) + sizeof(switch__));
  // @@protoc_insertion_point(copy_constructor:bilibili.live.gift.v1.SendGiftBroadcast)
}

inline void SendGiftBroadcast::SharedCtor() {
uname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
face_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&send_master_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&switch__) -
    reinterpret_cast<char*>(&send_master_)) + sizeof(switch__));
}

SendGiftBroadcast::~SendGiftBroadcast() {
  // @@protoc_insertion_point(destructor:bilibili.live.gift.v1.SendGiftBroadcast)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SendGiftBroadcast::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  uname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  face_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_color_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete send_master_;
  if (this != internal_default_instance()) delete medal_info_;
  if (this != internal_default_instance()) delete blind_gift_;
}

void SendGiftBroadcast::ArenaDtor(void* object) {
  SendGiftBroadcast* _this = reinterpret_cast< SendGiftBroadcast* >(object);
  (void)_this;
}
void SendGiftBroadcast::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SendGiftBroadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SendGiftBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.live.gift.v1.SendGiftBroadcast)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gift_list_.Clear();
  uname_.ClearToEmpty();
  face_.ClearToEmpty();
  name_color_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && send_master_ != nullptr) {
    delete send_master_;
  }
  send_master_ = nullptr;
  if (GetArenaForAllocation() == nullptr && medal_info_ != nullptr) {
    delete medal_info_;
  }
  medal_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && blind_gift_ != nullptr) {
    delete blind_gift_;
  }
  blind_gift_ = nullptr;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&switch__) -
      reinterpret_cast<char*>(&uid_)) + sizeof(switch__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SendGiftBroadcast::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 uid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          uid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.uname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string face = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_face();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.face"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name_color = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_name_color();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.live.gift.v1.SendGiftBroadcast.name_color"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 guard_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          guard_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 svga_block = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          svga_block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.live.gift.v1.SendGiftBroadcast.SendMaster send_master = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_send_master(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo medal_info = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_medal_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.live.gift.v1.SendGiftBroadcast.BlindGift blind_gift = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_blind_gift(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bilibili.live.gift.v1.SendGiftBroadcast.GiftItem gift_list = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_gift_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // bool switch = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          switch__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SendGiftBroadcast::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.live.gift.v1.SendGiftBroadcast)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_uid(), target);
  }

  // string uname = 2;
  if (!this->_internal_uname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uname().data(), static_cast<int>(this->_internal_uname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.uname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uname(), target);
  }

  // string face = 3;
  if (!this->_internal_face().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_face().data(), static_cast<int>(this->_internal_face().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.face");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_face(), target);
  }

  // string name_color = 4;
  if (!this->_internal_name_color().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name_color().data(), static_cast<int>(this->_internal_name_color().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.live.gift.v1.SendGiftBroadcast.name_color");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name_color(), target);
  }

  // int64 guard_level = 5;
  if (this->_internal_guard_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_guard_level(), target);
  }

  // int64 svga_block = 6;
  if (this->_internal_svga_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_svga_block(), target);
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.SendMaster send_master = 7;
  if (this->_internal_has_send_master()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::send_master(this), target, stream);
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo medal_info = 8;
  if (this->_internal_has_medal_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::medal_info(this), target, stream);
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.BlindGift blind_gift = 9;
  if (this->_internal_has_blind_gift()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::blind_gift(this), target, stream);
  }

  // repeated .bilibili.live.gift.v1.SendGiftBroadcast.GiftItem gift_list = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_gift_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_gift_list(i), target, stream);
  }

  // bool switch = 11;
  if (this->_internal_switch_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_switch_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.live.gift.v1.SendGiftBroadcast)
  return target;
}

size_t SendGiftBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.live.gift.v1.SendGiftBroadcast)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bilibili.live.gift.v1.SendGiftBroadcast.GiftItem gift_list = 10;
  total_size += 1UL * this->_internal_gift_list_size();
  for (const auto& msg : this->gift_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string uname = 2;
  if (!this->_internal_uname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uname());
  }

  // string face = 3;
  if (!this->_internal_face().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_face());
  }

  // string name_color = 4;
  if (!this->_internal_name_color().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name_color());
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.SendMaster send_master = 7;
  if (this->_internal_has_send_master()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *send_master_);
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.MedalInfo medal_info = 8;
  if (this->_internal_has_medal_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *medal_info_);
  }

  // .bilibili.live.gift.v1.SendGiftBroadcast.BlindGift blind_gift = 9;
  if (this->_internal_has_blind_gift()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *blind_gift_);
  }

  // int64 uid = 1;
  if (this->_internal_uid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_uid());
  }

  // int64 guard_level = 5;
  if (this->_internal_guard_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_guard_level());
  }

  // int64 svga_block = 6;
  if (this->_internal_svga_block() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_svga_block());
  }

  // bool switch = 11;
  if (this->_internal_switch_() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SendGiftBroadcast::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SendGiftBroadcast::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SendGiftBroadcast::GetClassData() const { return &_class_data_; }

void SendGiftBroadcast::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<SendGiftBroadcast *>(to)->MergeFrom(
      static_cast<const SendGiftBroadcast &>(from));
}


void SendGiftBroadcast::MergeFrom(const SendGiftBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.live.gift.v1.SendGiftBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gift_list_.MergeFrom(from.gift_list_);
  if (!from._internal_uname().empty()) {
    _internal_set_uname(from._internal_uname());
  }
  if (!from._internal_face().empty()) {
    _internal_set_face(from._internal_face());
  }
  if (!from._internal_name_color().empty()) {
    _internal_set_name_color(from._internal_name_color());
  }
  if (from._internal_has_send_master()) {
    _internal_mutable_send_master()->::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster::MergeFrom(from._internal_send_master());
  }
  if (from._internal_has_medal_info()) {
    _internal_mutable_medal_info()->::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo::MergeFrom(from._internal_medal_info());
  }
  if (from._internal_has_blind_gift()) {
    _internal_mutable_blind_gift()->::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift::MergeFrom(from._internal_blind_gift());
  }
  if (from._internal_uid() != 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from._internal_guard_level() != 0) {
    _internal_set_guard_level(from._internal_guard_level());
  }
  if (from._internal_svga_block() != 0) {
    _internal_set_svga_block(from._internal_svga_block());
  }
  if (from._internal_switch_() != 0) {
    _internal_set_switch_(from._internal_switch_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SendGiftBroadcast::CopyFrom(const SendGiftBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.live.gift.v1.SendGiftBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendGiftBroadcast::IsInitialized() const {
  return true;
}

void SendGiftBroadcast::InternalSwap(SendGiftBroadcast* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  gift_list_.InternalSwap(&other->gift_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uname_, GetArenaForAllocation(),
      &other->uname_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &face_, GetArenaForAllocation(),
      &other->face_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_color_, GetArenaForAllocation(),
      &other->name_color_, other->GetArenaForAllocation()
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendGiftBroadcast, switch__)
      + sizeof(SendGiftBroadcast::switch__)
      - PROTOBUF_FIELD_OFFSET(SendGiftBroadcast, send_master_)>(
          reinterpret_cast<char*>(&send_master_),
          reinterpret_cast<char*>(&other->send_master_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SendGiftBroadcast::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_broadcast_2eproto_getter, &descriptor_table_broadcast_2eproto_once,
      file_level_metadata_broadcast_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gift
}  // namespace live
}  // namespace bilibili
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem* Arena::CreateMaybeMessage< ::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::live::gift::v1::SendGiftBroadcast_GiftItem >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo* Arena::CreateMaybeMessage< ::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::live::gift::v1::SendGiftBroadcast_ReceiveUserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster* Arena::CreateMaybeMessage< ::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::live::gift::v1::SendGiftBroadcast_SendMaster >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift* Arena::CreateMaybeMessage< ::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::live::gift::v1::SendGiftBroadcast_BlindGift >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo* Arena::CreateMaybeMessage< ::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::live::gift::v1::SendGiftBroadcast_MedalInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::live::gift::v1::SendGiftBroadcast* Arena::CreateMaybeMessage< ::bilibili::live::gift::v1::SendGiftBroadcast >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::live::gift::v1::SendGiftBroadcast >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
