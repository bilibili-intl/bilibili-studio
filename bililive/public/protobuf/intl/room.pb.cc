// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#include "room.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace bilibili {
namespace broadcast {
namespace v1 {
constexpr RoomJoinEvent::RoomJoinEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RoomJoinEventDefaultTypeInternal {
  constexpr RoomJoinEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomJoinEventDefaultTypeInternal() {}
  union {
    RoomJoinEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomJoinEventDefaultTypeInternal _RoomJoinEvent_default_instance_;
constexpr RoomLeaveEvent::RoomLeaveEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RoomLeaveEventDefaultTypeInternal {
  constexpr RoomLeaveEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomLeaveEventDefaultTypeInternal() {}
  union {
    RoomLeaveEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomLeaveEventDefaultTypeInternal _RoomLeaveEvent_default_instance_;
constexpr RoomOnlineEvent::RoomOnlineEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : online_(0)
  , all_online_(0){}
struct RoomOnlineEventDefaultTypeInternal {
  constexpr RoomOnlineEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomOnlineEventDefaultTypeInternal() {}
  union {
    RoomOnlineEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomOnlineEventDefaultTypeInternal _RoomOnlineEvent_default_instance_;
constexpr RoomMessageEvent::RoomMessageEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : target_path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , body_(nullptr){}
struct RoomMessageEventDefaultTypeInternal {
  constexpr RoomMessageEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomMessageEventDefaultTypeInternal() {}
  union {
    RoomMessageEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomMessageEventDefaultTypeInternal _RoomMessageEvent_default_instance_;
constexpr RoomErrorEvent::RoomErrorEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct RoomErrorEventDefaultTypeInternal {
  constexpr RoomErrorEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomErrorEventDefaultTypeInternal() {}
  union {
    RoomErrorEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomErrorEventDefaultTypeInternal _RoomErrorEvent_default_instance_;
constexpr RoomReq::RoomReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , _oneof_case_{}{}
struct RoomReqDefaultTypeInternal {
  constexpr RoomReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomReqDefaultTypeInternal() {}
  union {
    RoomReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomReqDefaultTypeInternal _RoomReq_default_instance_;
constexpr RoomResp::RoomResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , _oneof_case_{}{}
struct RoomRespDefaultTypeInternal {
  constexpr RoomRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomRespDefaultTypeInternal() {}
  union {
    RoomResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomRespDefaultTypeInternal _RoomResp_default_instance_;
}  // namespace v1
}  // namespace broadcast
}  // namespace bilibili
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_room_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_room_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_room_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_room_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomJoinEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomLeaveEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomOnlineEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomOnlineEvent, online_),
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomOnlineEvent, all_online_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomMessageEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomMessageEvent, target_path_),
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomMessageEvent, body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomErrorEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomErrorEvent, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomReq, id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomReq, event_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomResp, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomResp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomResp, id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::bilibili::broadcast::v1::RoomResp, event_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bilibili::broadcast::v1::RoomJoinEvent)},
  { 5, -1, sizeof(::bilibili::broadcast::v1::RoomLeaveEvent)},
  { 10, -1, sizeof(::bilibili::broadcast::v1::RoomOnlineEvent)},
  { 17, -1, sizeof(::bilibili::broadcast::v1::RoomMessageEvent)},
  { 24, -1, sizeof(::bilibili::broadcast::v1::RoomErrorEvent)},
  { 30, -1, sizeof(::bilibili::broadcast::v1::RoomReq)},
  { 41, -1, sizeof(::bilibili::broadcast::v1::RoomResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::broadcast::v1::_RoomJoinEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::broadcast::v1::_RoomLeaveEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::broadcast::v1::_RoomOnlineEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::broadcast::v1::_RoomMessageEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::broadcast::v1::_RoomErrorEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::broadcast::v1::_RoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bilibili::broadcast::v1::_RoomResp_default_instance_),
};

const char descriptor_table_protodef_room_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nroom.proto\022\025bilibili.broadcast.v1\032\014sta"
  "tus.proto\032\031google/protobuf/any.proto\032\ngo"
  "go.proto\"\017\n\rRoomJoinEvent\"\020\n\016RoomLeaveEv"
  "ent\"5\n\017RoomOnlineEvent\022\016\n\006online\030\001 \001(\005\022\022"
  "\n\nall_online\030\002 \001(\005\"K\n\020RoomMessageEvent\022\023"
  "\n\013target_path\030\001 \001(\t\022\"\n\004body\030\002 \001(\0132\024.goog"
  "le.protobuf.Any\"6\n\016RoomErrorEvent\022$\n\006sta"
  "tus\030\001 \001(\0132\024.bilibili.rpc.Status\"\376\001\n\007Room"
  "Req\022\n\n\002id\030\001 \001(\t\0224\n\004join\030\002 \001(\0132$.bilibili"
  ".broadcast.v1.RoomJoinEventH\000\0226\n\005leave\030\003"
  " \001(\0132%.bilibili.broadcast.v1.RoomLeaveEv"
  "entH\000\0228\n\006online\030\004 \001(\0132&.bilibili.broadca"
  "st.v1.RoomOnlineEventH\000\0226\n\003msg\030\005 \001(\0132\'.b"
  "ilibili.broadcast.v1.RoomMessageEventH\000B"
  "\007\n\005event\"\265\002\n\010RoomResp\022\n\n\002id\030\001 \001(\t\0224\n\004joi"
  "n\030\002 \001(\0132$.bilibili.broadcast.v1.RoomJoin"
  "EventH\000\0226\n\005leave\030\003 \001(\0132%.bilibili.broadc"
  "ast.v1.RoomLeaveEventH\000\0228\n\006online\030\004 \001(\0132"
  "&.bilibili.broadcast.v1.RoomOnlineEventH"
  "\000\0226\n\003msg\030\005 \001(\0132\'.bilibili.broadcast.v1.R"
  "oomMessageEventH\000\0224\n\003err\030\006 \001(\0132%.bilibil"
  "i.broadcast.v1.RoomErrorEventH\000B\007\n\005event"
  "2]\n\rBroadcastRoom\022L\n\005Enter\022\036.bilibili.br"
  "oadcast.v1.RoomReq\032\037.bilibili.broadcast."
  "v1.RoomResp(\0010\001Bz\n\037com.bapis.bilibili.br"
  "oadcast.v1P\001Z7git.bilibili.co/bapis/bapi"
  "s-go/bilibili/broadcast/v1;v1\242\002\017BAPIBroa"
  "dcastV1\340\342\036\000\310\342\036\000\320\342\036\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_room_2eproto_deps[3] = {
  &::descriptor_table_gogo_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_status_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_room_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_room_2eproto = {
  false, false, 1107, descriptor_table_protodef_room_2eproto, "room.proto", 
  &descriptor_table_room_2eproto_once, descriptor_table_room_2eproto_deps, 3, 7,
  schemas, file_default_instances, TableStruct_room_2eproto::offsets,
  file_level_metadata_room_2eproto, file_level_enum_descriptors_room_2eproto, file_level_service_descriptors_room_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_room_2eproto_getter() {
  return &descriptor_table_room_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_room_2eproto(&descriptor_table_room_2eproto);
namespace bilibili {
namespace broadcast {
namespace v1 {

// ===================================================================

class RoomJoinEvent::_Internal {
 public:
};

RoomJoinEvent::RoomJoinEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.broadcast.v1.RoomJoinEvent)
}
RoomJoinEvent::RoomJoinEvent(const RoomJoinEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bilibili.broadcast.v1.RoomJoinEvent)
}

inline void RoomJoinEvent::SharedCtor() {
}

RoomJoinEvent::~RoomJoinEvent() {
  // @@protoc_insertion_point(destructor:bilibili.broadcast.v1.RoomJoinEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomJoinEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomJoinEvent::ArenaDtor(void* object) {
  RoomJoinEvent* _this = reinterpret_cast< RoomJoinEvent* >(object);
  (void)_this;
}
void RoomJoinEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomJoinEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomJoinEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.broadcast.v1.RoomJoinEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomJoinEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomJoinEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.broadcast.v1.RoomJoinEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.broadcast.v1.RoomJoinEvent)
  return target;
}

size_t RoomJoinEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.broadcast.v1.RoomJoinEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomJoinEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomJoinEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomJoinEvent::GetClassData() const { return &_class_data_; }

void RoomJoinEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RoomJoinEvent *>(to)->MergeFrom(
      static_cast<const RoomJoinEvent &>(from));
}


void RoomJoinEvent::MergeFrom(const RoomJoinEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.broadcast.v1.RoomJoinEvent)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomJoinEvent::CopyFrom(const RoomJoinEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.broadcast.v1.RoomJoinEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomJoinEvent::IsInitialized() const {
  return true;
}

void RoomJoinEvent::InternalSwap(RoomJoinEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomJoinEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_room_2eproto_getter, &descriptor_table_room_2eproto_once,
      file_level_metadata_room_2eproto[0]);
}

// ===================================================================

class RoomLeaveEvent::_Internal {
 public:
};

RoomLeaveEvent::RoomLeaveEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.broadcast.v1.RoomLeaveEvent)
}
RoomLeaveEvent::RoomLeaveEvent(const RoomLeaveEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bilibili.broadcast.v1.RoomLeaveEvent)
}

inline void RoomLeaveEvent::SharedCtor() {
}

RoomLeaveEvent::~RoomLeaveEvent() {
  // @@protoc_insertion_point(destructor:bilibili.broadcast.v1.RoomLeaveEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomLeaveEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomLeaveEvent::ArenaDtor(void* object) {
  RoomLeaveEvent* _this = reinterpret_cast< RoomLeaveEvent* >(object);
  (void)_this;
}
void RoomLeaveEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomLeaveEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomLeaveEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.broadcast.v1.RoomLeaveEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomLeaveEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomLeaveEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.broadcast.v1.RoomLeaveEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.broadcast.v1.RoomLeaveEvent)
  return target;
}

size_t RoomLeaveEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.broadcast.v1.RoomLeaveEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomLeaveEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomLeaveEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomLeaveEvent::GetClassData() const { return &_class_data_; }

void RoomLeaveEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RoomLeaveEvent *>(to)->MergeFrom(
      static_cast<const RoomLeaveEvent &>(from));
}


void RoomLeaveEvent::MergeFrom(const RoomLeaveEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.broadcast.v1.RoomLeaveEvent)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomLeaveEvent::CopyFrom(const RoomLeaveEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.broadcast.v1.RoomLeaveEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomLeaveEvent::IsInitialized() const {
  return true;
}

void RoomLeaveEvent::InternalSwap(RoomLeaveEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomLeaveEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_room_2eproto_getter, &descriptor_table_room_2eproto_once,
      file_level_metadata_room_2eproto[1]);
}

// ===================================================================

class RoomOnlineEvent::_Internal {
 public:
};

RoomOnlineEvent::RoomOnlineEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.broadcast.v1.RoomOnlineEvent)
}
RoomOnlineEvent::RoomOnlineEvent(const RoomOnlineEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&online_, &from.online_,
    static_cast<size_t>(reinterpret_cast<char*>(&all_online_) -
    reinterpret_cast<char*>(&online_)) + sizeof(all_online_));
  // @@protoc_insertion_point(copy_constructor:bilibili.broadcast.v1.RoomOnlineEvent)
}

inline void RoomOnlineEvent::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&online_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&all_online_) -
    reinterpret_cast<char*>(&online_)) + sizeof(all_online_));
}

RoomOnlineEvent::~RoomOnlineEvent() {
  // @@protoc_insertion_point(destructor:bilibili.broadcast.v1.RoomOnlineEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomOnlineEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomOnlineEvent::ArenaDtor(void* object) {
  RoomOnlineEvent* _this = reinterpret_cast< RoomOnlineEvent* >(object);
  (void)_this;
}
void RoomOnlineEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomOnlineEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomOnlineEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.broadcast.v1.RoomOnlineEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&online_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&all_online_) -
      reinterpret_cast<char*>(&online_)) + sizeof(all_online_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomOnlineEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 online = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 all_online = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          all_online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomOnlineEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.broadcast.v1.RoomOnlineEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 online = 1;
  if (this->_internal_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_online(), target);
  }

  // int32 all_online = 2;
  if (this->_internal_all_online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_all_online(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.broadcast.v1.RoomOnlineEvent)
  return target;
}

size_t RoomOnlineEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.broadcast.v1.RoomOnlineEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 online = 1;
  if (this->_internal_online() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_online());
  }

  // int32 all_online = 2;
  if (this->_internal_all_online() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_all_online());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomOnlineEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomOnlineEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomOnlineEvent::GetClassData() const { return &_class_data_; }

void RoomOnlineEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RoomOnlineEvent *>(to)->MergeFrom(
      static_cast<const RoomOnlineEvent &>(from));
}


void RoomOnlineEvent::MergeFrom(const RoomOnlineEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.broadcast.v1.RoomOnlineEvent)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_online() != 0) {
    _internal_set_online(from._internal_online());
  }
  if (from._internal_all_online() != 0) {
    _internal_set_all_online(from._internal_all_online());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomOnlineEvent::CopyFrom(const RoomOnlineEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.broadcast.v1.RoomOnlineEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomOnlineEvent::IsInitialized() const {
  return true;
}

void RoomOnlineEvent::InternalSwap(RoomOnlineEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoomOnlineEvent, all_online_)
      + sizeof(RoomOnlineEvent::all_online_)
      - PROTOBUF_FIELD_OFFSET(RoomOnlineEvent, online_)>(
          reinterpret_cast<char*>(&online_),
          reinterpret_cast<char*>(&other->online_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomOnlineEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_room_2eproto_getter, &descriptor_table_room_2eproto_once,
      file_level_metadata_room_2eproto[2]);
}

// ===================================================================

class RoomMessageEvent::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& body(const RoomMessageEvent* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
RoomMessageEvent::_Internal::body(const RoomMessageEvent* msg) {
  return *msg->body_;
}
void RoomMessageEvent::clear_body() {
  if (GetArenaForAllocation() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
}
RoomMessageEvent::RoomMessageEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.broadcast.v1.RoomMessageEvent)
}
RoomMessageEvent::RoomMessageEvent(const RoomMessageEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_path().empty()) {
    target_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_target_path(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_body()) {
    body_ = new PROTOBUF_NAMESPACE_ID::Any(*from.body_);
  } else {
    body_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bilibili.broadcast.v1.RoomMessageEvent)
}

inline void RoomMessageEvent::SharedCtor() {
target_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
body_ = nullptr;
}

RoomMessageEvent::~RoomMessageEvent() {
  // @@protoc_insertion_point(destructor:bilibili.broadcast.v1.RoomMessageEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomMessageEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  target_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete body_;
}

void RoomMessageEvent::ArenaDtor(void* object) {
  RoomMessageEvent* _this = reinterpret_cast< RoomMessageEvent* >(object);
  (void)_this;
}
void RoomMessageEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomMessageEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomMessageEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.broadcast.v1.RoomMessageEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_path_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomMessageEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string target_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_target_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.broadcast.v1.RoomMessageEvent.target_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomMessageEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.broadcast.v1.RoomMessageEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_path = 1;
  if (!this->_internal_target_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_path().data(), static_cast<int>(this->_internal_target_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.broadcast.v1.RoomMessageEvent.target_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_target_path(), target);
  }

  // .google.protobuf.Any body = 2;
  if (this->_internal_has_body()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::body(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.broadcast.v1.RoomMessageEvent)
  return target;
}

size_t RoomMessageEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.broadcast.v1.RoomMessageEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_path = 1;
  if (!this->_internal_target_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_path());
  }

  // .google.protobuf.Any body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *body_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomMessageEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomMessageEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomMessageEvent::GetClassData() const { return &_class_data_; }

void RoomMessageEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RoomMessageEvent *>(to)->MergeFrom(
      static_cast<const RoomMessageEvent &>(from));
}


void RoomMessageEvent::MergeFrom(const RoomMessageEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.broadcast.v1.RoomMessageEvent)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_target_path().empty()) {
    _internal_set_target_path(from._internal_target_path());
  }
  if (from._internal_has_body()) {
    _internal_mutable_body()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_body());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomMessageEvent::CopyFrom(const RoomMessageEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.broadcast.v1.RoomMessageEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomMessageEvent::IsInitialized() const {
  return true;
}

void RoomMessageEvent::InternalSwap(RoomMessageEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &target_path_, GetArenaForAllocation(),
      &other->target_path_, other->GetArenaForAllocation()
  );
  swap(body_, other->body_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomMessageEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_room_2eproto_getter, &descriptor_table_room_2eproto_once,
      file_level_metadata_room_2eproto[3]);
}

// ===================================================================

class RoomErrorEvent::_Internal {
 public:
  static const ::bilibili::rpc::Status& status(const RoomErrorEvent* msg);
};

const ::bilibili::rpc::Status&
RoomErrorEvent::_Internal::status(const RoomErrorEvent* msg) {
  return *msg->status_;
}
void RoomErrorEvent::clear_status() {
  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
RoomErrorEvent::RoomErrorEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.broadcast.v1.RoomErrorEvent)
}
RoomErrorEvent::RoomErrorEvent(const RoomErrorEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::bilibili::rpc::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bilibili.broadcast.v1.RoomErrorEvent)
}

inline void RoomErrorEvent::SharedCtor() {
status_ = nullptr;
}

RoomErrorEvent::~RoomErrorEvent() {
  // @@protoc_insertion_point(destructor:bilibili.broadcast.v1.RoomErrorEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomErrorEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void RoomErrorEvent::ArenaDtor(void* object) {
  RoomErrorEvent* _this = reinterpret_cast< RoomErrorEvent* >(object);
  (void)_this;
}
void RoomErrorEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomErrorEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomErrorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.broadcast.v1.RoomErrorEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomErrorEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .bilibili.rpc.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomErrorEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.broadcast.v1.RoomErrorEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bilibili.rpc.Status status = 1;
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.broadcast.v1.RoomErrorEvent)
  return target;
}

size_t RoomErrorEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.broadcast.v1.RoomErrorEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bilibili.rpc.Status status = 1;
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomErrorEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomErrorEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomErrorEvent::GetClassData() const { return &_class_data_; }

void RoomErrorEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RoomErrorEvent *>(to)->MergeFrom(
      static_cast<const RoomErrorEvent &>(from));
}


void RoomErrorEvent::MergeFrom(const RoomErrorEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.broadcast.v1.RoomErrorEvent)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::bilibili::rpc::Status::MergeFrom(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomErrorEvent::CopyFrom(const RoomErrorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.broadcast.v1.RoomErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomErrorEvent::IsInitialized() const {
  return true;
}

void RoomErrorEvent::InternalSwap(RoomErrorEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomErrorEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_room_2eproto_getter, &descriptor_table_room_2eproto_once,
      file_level_metadata_room_2eproto[4]);
}

// ===================================================================

class RoomReq::_Internal {
 public:
  static const ::bilibili::broadcast::v1::RoomJoinEvent& join(const RoomReq* msg);
  static const ::bilibili::broadcast::v1::RoomLeaveEvent& leave(const RoomReq* msg);
  static const ::bilibili::broadcast::v1::RoomOnlineEvent& online(const RoomReq* msg);
  static const ::bilibili::broadcast::v1::RoomMessageEvent& msg(const RoomReq* msg);
};

const ::bilibili::broadcast::v1::RoomJoinEvent&
RoomReq::_Internal::join(const RoomReq* msg) {
  return *msg->event_.join_;
}
const ::bilibili::broadcast::v1::RoomLeaveEvent&
RoomReq::_Internal::leave(const RoomReq* msg) {
  return *msg->event_.leave_;
}
const ::bilibili::broadcast::v1::RoomOnlineEvent&
RoomReq::_Internal::online(const RoomReq* msg) {
  return *msg->event_.online_;
}
const ::bilibili::broadcast::v1::RoomMessageEvent&
RoomReq::_Internal::msg(const RoomReq* msg) {
  return *msg->event_.msg_;
}
void RoomReq::set_allocated_join(::bilibili::broadcast::v1::RoomJoinEvent* join) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (join) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomJoinEvent>::GetOwningArena(join);
    if (message_arena != submessage_arena) {
      join = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, join, submessage_arena);
    }
    set_has_join();
    event_.join_ = join;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomReq.join)
}
void RoomReq::set_allocated_leave(::bilibili::broadcast::v1::RoomLeaveEvent* leave) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (leave) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomLeaveEvent>::GetOwningArena(leave);
    if (message_arena != submessage_arena) {
      leave = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, leave, submessage_arena);
    }
    set_has_leave();
    event_.leave_ = leave;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomReq.leave)
}
void RoomReq::set_allocated_online(::bilibili::broadcast::v1::RoomOnlineEvent* online) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (online) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomOnlineEvent>::GetOwningArena(online);
    if (message_arena != submessage_arena) {
      online = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, online, submessage_arena);
    }
    set_has_online();
    event_.online_ = online;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomReq.online)
}
void RoomReq::set_allocated_msg(::bilibili::broadcast::v1::RoomMessageEvent* msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomMessageEvent>::GetOwningArena(msg);
    if (message_arena != submessage_arena) {
      msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    set_has_msg();
    event_.msg_ = msg;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomReq.msg)
}
RoomReq::RoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.broadcast.v1.RoomReq)
}
RoomReq::RoomReq(const RoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  clear_has_event();
  switch (from.event_case()) {
    case kJoin: {
      _internal_mutable_join()->::bilibili::broadcast::v1::RoomJoinEvent::MergeFrom(from._internal_join());
      break;
    }
    case kLeave: {
      _internal_mutable_leave()->::bilibili::broadcast::v1::RoomLeaveEvent::MergeFrom(from._internal_leave());
      break;
    }
    case kOnline: {
      _internal_mutable_online()->::bilibili::broadcast::v1::RoomOnlineEvent::MergeFrom(from._internal_online());
      break;
    }
    case kMsg: {
      _internal_mutable_msg()->::bilibili::broadcast::v1::RoomMessageEvent::MergeFrom(from._internal_msg());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bilibili.broadcast.v1.RoomReq)
}

inline void RoomReq::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
clear_has_event();
}

RoomReq::~RoomReq() {
  // @@protoc_insertion_point(destructor:bilibili.broadcast.v1.RoomReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_event()) {
    clear_event();
  }
}

void RoomReq::ArenaDtor(void* object) {
  RoomReq* _this = reinterpret_cast< RoomReq* >(object);
  (void)_this;
}
void RoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomReq::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:bilibili.broadcast.v1.RoomReq)
  switch (event_case()) {
    case kJoin: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.join_;
      }
      break;
    }
    case kLeave: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.leave_;
      }
      break;
    }
    case kOnline: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.online_;
      }
      break;
    }
    case kMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.msg_;
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void RoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.broadcast.v1.RoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  clear_event();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.broadcast.v1.RoomReq.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomJoinEvent join = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_join(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomLeaveEvent leave = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_leave(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomOnlineEvent online = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_online(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomMessageEvent msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.broadcast.v1.RoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.broadcast.v1.RoomReq.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .bilibili.broadcast.v1.RoomJoinEvent join = 2;
  if (_internal_has_join()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::join(this), target, stream);
  }

  // .bilibili.broadcast.v1.RoomLeaveEvent leave = 3;
  if (_internal_has_leave()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::leave(this), target, stream);
  }

  // .bilibili.broadcast.v1.RoomOnlineEvent online = 4;
  if (_internal_has_online()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::online(this), target, stream);
  }

  // .bilibili.broadcast.v1.RoomMessageEvent msg = 5;
  if (_internal_has_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::msg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.broadcast.v1.RoomReq)
  return target;
}

size_t RoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.broadcast.v1.RoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  switch (event_case()) {
    // .bilibili.broadcast.v1.RoomJoinEvent join = 2;
    case kJoin: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.join_);
      break;
    }
    // .bilibili.broadcast.v1.RoomLeaveEvent leave = 3;
    case kLeave: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.leave_);
      break;
    }
    // .bilibili.broadcast.v1.RoomOnlineEvent online = 4;
    case kOnline: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.online_);
      break;
    }
    // .bilibili.broadcast.v1.RoomMessageEvent msg = 5;
    case kMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.msg_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomReq::GetClassData() const { return &_class_data_; }

void RoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RoomReq *>(to)->MergeFrom(
      static_cast<const RoomReq &>(from));
}


void RoomReq::MergeFrom(const RoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.broadcast.v1.RoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  switch (from.event_case()) {
    case kJoin: {
      _internal_mutable_join()->::bilibili::broadcast::v1::RoomJoinEvent::MergeFrom(from._internal_join());
      break;
    }
    case kLeave: {
      _internal_mutable_leave()->::bilibili::broadcast::v1::RoomLeaveEvent::MergeFrom(from._internal_leave());
      break;
    }
    case kOnline: {
      _internal_mutable_online()->::bilibili::broadcast::v1::RoomOnlineEvent::MergeFrom(from._internal_online());
      break;
    }
    case kMsg: {
      _internal_mutable_msg()->::bilibili::broadcast::v1::RoomMessageEvent::MergeFrom(from._internal_msg());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomReq::CopyFrom(const RoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.broadcast.v1.RoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomReq::IsInitialized() const {
  return true;
}

void RoomReq::InternalSwap(RoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  swap(event_, other->event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_room_2eproto_getter, &descriptor_table_room_2eproto_once,
      file_level_metadata_room_2eproto[5]);
}

// ===================================================================

class RoomResp::_Internal {
 public:
  static const ::bilibili::broadcast::v1::RoomJoinEvent& join(const RoomResp* msg);
  static const ::bilibili::broadcast::v1::RoomLeaveEvent& leave(const RoomResp* msg);
  static const ::bilibili::broadcast::v1::RoomOnlineEvent& online(const RoomResp* msg);
  static const ::bilibili::broadcast::v1::RoomMessageEvent& msg(const RoomResp* msg);
  static const ::bilibili::broadcast::v1::RoomErrorEvent& err(const RoomResp* msg);
};

const ::bilibili::broadcast::v1::RoomJoinEvent&
RoomResp::_Internal::join(const RoomResp* msg) {
  return *msg->event_.join_;
}
const ::bilibili::broadcast::v1::RoomLeaveEvent&
RoomResp::_Internal::leave(const RoomResp* msg) {
  return *msg->event_.leave_;
}
const ::bilibili::broadcast::v1::RoomOnlineEvent&
RoomResp::_Internal::online(const RoomResp* msg) {
  return *msg->event_.online_;
}
const ::bilibili::broadcast::v1::RoomMessageEvent&
RoomResp::_Internal::msg(const RoomResp* msg) {
  return *msg->event_.msg_;
}
const ::bilibili::broadcast::v1::RoomErrorEvent&
RoomResp::_Internal::err(const RoomResp* msg) {
  return *msg->event_.err_;
}
void RoomResp::set_allocated_join(::bilibili::broadcast::v1::RoomJoinEvent* join) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (join) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomJoinEvent>::GetOwningArena(join);
    if (message_arena != submessage_arena) {
      join = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, join, submessage_arena);
    }
    set_has_join();
    event_.join_ = join;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomResp.join)
}
void RoomResp::set_allocated_leave(::bilibili::broadcast::v1::RoomLeaveEvent* leave) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (leave) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomLeaveEvent>::GetOwningArena(leave);
    if (message_arena != submessage_arena) {
      leave = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, leave, submessage_arena);
    }
    set_has_leave();
    event_.leave_ = leave;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomResp.leave)
}
void RoomResp::set_allocated_online(::bilibili::broadcast::v1::RoomOnlineEvent* online) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (online) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomOnlineEvent>::GetOwningArena(online);
    if (message_arena != submessage_arena) {
      online = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, online, submessage_arena);
    }
    set_has_online();
    event_.online_ = online;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomResp.online)
}
void RoomResp::set_allocated_msg(::bilibili::broadcast::v1::RoomMessageEvent* msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomMessageEvent>::GetOwningArena(msg);
    if (message_arena != submessage_arena) {
      msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    set_has_msg();
    event_.msg_ = msg;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomResp.msg)
}
void RoomResp::set_allocated_err(::bilibili::broadcast::v1::RoomErrorEvent* err) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_event();
  if (err) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::bilibili::broadcast::v1::RoomErrorEvent>::GetOwningArena(err);
    if (message_arena != submessage_arena) {
      err = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, err, submessage_arena);
    }
    set_has_err();
    event_.err_ = err;
  }
  // @@protoc_insertion_point(field_set_allocated:bilibili.broadcast.v1.RoomResp.err)
}
RoomResp::RoomResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:bilibili.broadcast.v1.RoomResp)
}
RoomResp::RoomResp(const RoomResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  clear_has_event();
  switch (from.event_case()) {
    case kJoin: {
      _internal_mutable_join()->::bilibili::broadcast::v1::RoomJoinEvent::MergeFrom(from._internal_join());
      break;
    }
    case kLeave: {
      _internal_mutable_leave()->::bilibili::broadcast::v1::RoomLeaveEvent::MergeFrom(from._internal_leave());
      break;
    }
    case kOnline: {
      _internal_mutable_online()->::bilibili::broadcast::v1::RoomOnlineEvent::MergeFrom(from._internal_online());
      break;
    }
    case kMsg: {
      _internal_mutable_msg()->::bilibili::broadcast::v1::RoomMessageEvent::MergeFrom(from._internal_msg());
      break;
    }
    case kErr: {
      _internal_mutable_err()->::bilibili::broadcast::v1::RoomErrorEvent::MergeFrom(from._internal_err());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bilibili.broadcast.v1.RoomResp)
}

inline void RoomResp::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
clear_has_event();
}

RoomResp::~RoomResp() {
  // @@protoc_insertion_point(destructor:bilibili.broadcast.v1.RoomResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_event()) {
    clear_event();
  }
}

void RoomResp::ArenaDtor(void* object) {
  RoomResp* _this = reinterpret_cast< RoomResp* >(object);
  (void)_this;
}
void RoomResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RoomResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomResp::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:bilibili.broadcast.v1.RoomResp)
  switch (event_case()) {
    case kJoin: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.join_;
      }
      break;
    }
    case kLeave: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.leave_;
      }
      break;
    }
    case kOnline: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.online_;
      }
      break;
    }
    case kMsg: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.msg_;
      }
      break;
    }
    case kErr: {
      if (GetArenaForAllocation() == nullptr) {
        delete event_.err_;
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void RoomResp::Clear() {
// @@protoc_insertion_point(message_clear_start:bilibili.broadcast.v1.RoomResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  clear_event();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bilibili.broadcast.v1.RoomResp.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomJoinEvent join = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_join(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomLeaveEvent leave = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_leave(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomOnlineEvent online = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_online(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomMessageEvent msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bilibili.broadcast.v1.RoomErrorEvent err = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_err(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RoomResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bilibili.broadcast.v1.RoomResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bilibili.broadcast.v1.RoomResp.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .bilibili.broadcast.v1.RoomJoinEvent join = 2;
  if (_internal_has_join()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::join(this), target, stream);
  }

  // .bilibili.broadcast.v1.RoomLeaveEvent leave = 3;
  if (_internal_has_leave()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::leave(this), target, stream);
  }

  // .bilibili.broadcast.v1.RoomOnlineEvent online = 4;
  if (_internal_has_online()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::online(this), target, stream);
  }

  // .bilibili.broadcast.v1.RoomMessageEvent msg = 5;
  if (_internal_has_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::msg(this), target, stream);
  }

  // .bilibili.broadcast.v1.RoomErrorEvent err = 6;
  if (_internal_has_err()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::err(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bilibili.broadcast.v1.RoomResp)
  return target;
}

size_t RoomResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bilibili.broadcast.v1.RoomResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  switch (event_case()) {
    // .bilibili.broadcast.v1.RoomJoinEvent join = 2;
    case kJoin: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.join_);
      break;
    }
    // .bilibili.broadcast.v1.RoomLeaveEvent leave = 3;
    case kLeave: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.leave_);
      break;
    }
    // .bilibili.broadcast.v1.RoomOnlineEvent online = 4;
    case kOnline: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.online_);
      break;
    }
    // .bilibili.broadcast.v1.RoomMessageEvent msg = 5;
    case kMsg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.msg_);
      break;
    }
    // .bilibili.broadcast.v1.RoomErrorEvent err = 6;
    case kErr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *event_.err_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomResp::GetClassData() const { return &_class_data_; }

void RoomResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to,
                      const ::PROTOBUF_NAMESPACE_ID::Message&from) {
  static_cast<RoomResp *>(to)->MergeFrom(
      static_cast<const RoomResp &>(from));
}


void RoomResp::MergeFrom(const RoomResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bilibili.broadcast.v1.RoomResp)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  switch (from.event_case()) {
    case kJoin: {
      _internal_mutable_join()->::bilibili::broadcast::v1::RoomJoinEvent::MergeFrom(from._internal_join());
      break;
    }
    case kLeave: {
      _internal_mutable_leave()->::bilibili::broadcast::v1::RoomLeaveEvent::MergeFrom(from._internal_leave());
      break;
    }
    case kOnline: {
      _internal_mutable_online()->::bilibili::broadcast::v1::RoomOnlineEvent::MergeFrom(from._internal_online());
      break;
    }
    case kMsg: {
      _internal_mutable_msg()->::bilibili::broadcast::v1::RoomMessageEvent::MergeFrom(from._internal_msg());
      break;
    }
    case kErr: {
      _internal_mutable_err()->::bilibili::broadcast::v1::RoomErrorEvent::MergeFrom(from._internal_err());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomResp::CopyFrom(const RoomResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bilibili.broadcast.v1.RoomResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomResp::IsInitialized() const {
  return true;
}

void RoomResp::InternalSwap(RoomResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, GetArenaForAllocation(),
      &other->id_, other->GetArenaForAllocation()
  );
  swap(event_, other->event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_room_2eproto_getter, &descriptor_table_room_2eproto_once,
      file_level_metadata_room_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace broadcast
}  // namespace bilibili
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bilibili::broadcast::v1::RoomJoinEvent* Arena::CreateMaybeMessage< ::bilibili::broadcast::v1::RoomJoinEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::broadcast::v1::RoomJoinEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::broadcast::v1::RoomLeaveEvent* Arena::CreateMaybeMessage< ::bilibili::broadcast::v1::RoomLeaveEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::broadcast::v1::RoomLeaveEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::broadcast::v1::RoomOnlineEvent* Arena::CreateMaybeMessage< ::bilibili::broadcast::v1::RoomOnlineEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::broadcast::v1::RoomOnlineEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::broadcast::v1::RoomMessageEvent* Arena::CreateMaybeMessage< ::bilibili::broadcast::v1::RoomMessageEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::broadcast::v1::RoomMessageEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::broadcast::v1::RoomErrorEvent* Arena::CreateMaybeMessage< ::bilibili::broadcast::v1::RoomErrorEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::broadcast::v1::RoomErrorEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::broadcast::v1::RoomReq* Arena::CreateMaybeMessage< ::bilibili::broadcast::v1::RoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::broadcast::v1::RoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::bilibili::broadcast::v1::RoomResp* Arena::CreateMaybeMessage< ::bilibili::broadcast::v1::RoomResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bilibili::broadcast::v1::RoomResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
